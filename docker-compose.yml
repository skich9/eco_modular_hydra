networks:
  angular_laravel_network:
    driver: bridge

volumes:
  angular_laravel_node_modules:

services:
  # Base de datos primero
  angular_laravel_mysql:
    image: mysql:8.0
    restart: unless-stopped
    container_name: angular_laravel_mysql
    env_file:
      - mysql/.env
    ports:
      - "3308:3306"
    networks:
      - angular_laravel_network
    volumes:
      - ./mysql_data:/var/lib/mysql

  # PHP
  angular_laravel_php:
    build:
      context: .
      dockerfile: dockerfiles/php.dockerfile
    volumes:
      - ./src:/var/www/html
    container_name: angular_laravel_php
    networks:
      - angular_laravel_network
    
  # Nginx
  angular_laravel_server:
    build:
      context: .
      dockerfile: dockerfiles/nginx.dockerfile
    ports:
      - "8080:80"
    volumes:
      - ./src:/var/www/html
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf:ro
    depends_on:
      - angular_laravel_php
      - angular_laravel_mysql
    container_name: angular_laravel_server
    networks:
      - angular_laravel_network

  # phpMyAdmin
  angular_laravel_phpmyadmin:
    image: phpmyadmin/phpmyadmin:latest
    restart: always
    container_name: angular_laravel_phpmyadmin
    depends_on:
      - angular_laravel_mysql
    ports:
      - "8091:80"
    environment:
      PMA_HOST: angular_laravel_mysql
      PMA_USER: root
      PMA_PASSWORD: root.pa55
    networks:
      - angular_laravel_network

  # Composer
  angular_laravel_composer:
    build:
      context: .
      dockerfile: dockerfiles/composer.dockerfile
    volumes:
      - ./src:/var/www/html
    depends_on:
      - angular_laravel_php
    networks:
      - angular_laravel_network

  # Artisan
  angular_laravel_artisan:
    build:
      context: .
      dockerfile: dockerfiles/php.dockerfile
    volumes:
      - ./src:/var/www/html
    entrypoint: ["php", "/var/www/html/artisan"]
    networks:
      - angular_laravel_network

  # Angular para desarrollo
  angular_laravel_angular-dev:
    image: node:20-alpine
    container_name: angular_laravel_angular_dev
    working_dir: /app
    volumes:
      - ./frontend:/app
      - angular_laravel_node_modules:/app/node_modules   
    ports:
      - "4200:4200"
    environment:
      - NODE_ENV=development
    command: sh -c "npm install && npm start -- --host 0.0.0.0 --port 4200"
    networks:
      - angular_laravel_network

  # Angular para build (ejecutar manualmente)
  angular_laravel_angular-builder:
    image: node:20-alpine
    container_name: angular_laravel_angular_builder
    working_dir: /app
    volumes:
      - ./frontend:/app
      - angular_laravel_node_modules:/app/node_modules
    environment:
      - NODE_ENV=production
    command: sh -c "npm install && npm run build -- --output-path=./dist --output-hashing=all"
    networks:
      - angular_laravel_network